version: "3.7"

services:
  postgres:
    hostname: flagsmith_postgres
    container_name: flagsmith_postgres
    user: root
    image: postgres:15.5-alpine
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - C:\containers\flagsmith\postgres:/var/lib/postgresql/data
    networks:
      - dev-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -d flagsmith -U postgres']
      interval: 2s
      timeout: 2s
      retries: 20
      start_period: 20s

  flagsmith:
    image: flagsmith/flagsmith:latest
    user: root
    environment:
      # All environments variables are available here:
      # API: https://docs.flagsmith.com/deployment/locally-api#environment-variables
      # UI: https://docs.flagsmith.com/deployment/locally-frontend#environment-variables
      DATABASE_URL: postgresql://postgres:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      USE_POSTGRES_FOR_ANALYTICS: 'true'
      #ENVIRONMENT variable must be one of: local, dev, staging or production
      ENVIRONMENT: ${FLAGSMITH_ENVIRONMENT} 
      DJANGO_ALLOWED_HOSTS: '*'
      ALLOW_ADMIN_INITIATION_VIA_CLI: 'true'
      FLAGSMITH_DOMAIN: localhost:8000
      DJANGO_SECRET_KEY: secret
      ENABLE_ADMIN_ACCESS_USER_PASS: 'true'
      # PREVENT_SIGNUP: 'true' # Uncomment to prevent additional signups
      # ALLOW_REGISTRATION_WITHOUT_INVITE: 'true'
      TASK_RUN_METHOD: TASK_PROCESSOR
      # For more info on configuring E-Mails - https://docs.flagsmith.com/deployment/locally-api#environment-variables
      # Example SMTP:
      # EMAIL_BACKEND: django.core.mail.backends.smtp.EmailBackend
      # EMAIL_HOST: mail.example.com
      # SENDER_EMAIL: flagsmith@example.com
      # EMAIL_HOST_USER: flagsmith@example.com
      # EMAIL_HOST_PASSWORD: smtp_account_password
      # EMAIL_PORT: 587 # optional
      # EMAIL_USE_TLS: 'true' # optional
    ports:
      - 8000:8000
    healthcheck:
      test: ['CMD-SHELL', 'python /app/scripts/healthcheck.py']
      interval: 2s
      timeout: 2s
      retries: 20
      start_period: 20s
    networks:
      - dev-network
    depends_on:
      postgres:
        condition: service_healthy

  # The flagsmith_processor service is only needed if TASK_RUN_METHOD set to TASK_PROCESSOR in the application environment
  flagsmith_processor:
    image: flagsmith/flagsmith:latest
    environment:
      DATABASE_URL: postgresql://postgres:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      USE_POSTGRES_FOR_ANALYTICS: 'true'
    depends_on:
      flagsmith:
        condition: service_healthy
    command: run-task-processor

networks:
  dev-network:
    driver: bridge

# first access: http://localhost:8000/signup
# url: http://localhost:8000/
