version: "3.7"

services:
  mssql-server:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: mssqlserver
    volumes:
       - C:\dev\dotnet-environment\mssql:/var/opt/mssql/data
    ports: 
      - "1433:1433"
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: ${SQL_PASSWORD}
      MSSQL_PID: ${SQL_PID}
    networks:
      - dev-network

  redis:
    image: redis:alpine
    container_name: redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    networks:
      - dev-network
    depends_on: 
      - mssql-server
  
  redisinsight:
    image: redislabs/redisinsight:latest
    container_name: redis-insight
    ports:
      - "8001:8001"
    volumes:
      - C:\dev\dotnet-environment\redisdb:/db
    depends_on:
      - redis
    networks:
      - dev-network
  
  dotnet:
    image: mcr.microsoft.com/dotnet/sdk:3.1
    container_name: dotnet
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    ports:
      - "5000:5000"
      - "5001:5001"
    volumes:
      - C:\dev\dotnet-environment\dotnet:/srv/app
    working_dir: /srv/app
    depends_on:
      - redisinsight
    environment:
      BUILD_CONFIGURATION: "Debug"
      ASPNETCORE_ENVIRONMENT: "Development"
      # DOTNET_USE_POLLING_FILE_WATCHER: "true"
      ASPNETCORE_URLS: "http://+:80"
    expose:
      - "80"
    networks:
      - dev-network
    
networks:
  dev-network:
    driver: bridge
    external: true
