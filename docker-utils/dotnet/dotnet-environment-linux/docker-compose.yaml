version: "3.7"

services:
  mssql-server:
    image: mcr.microsoft.com/mssql/server:2017-latest-ubuntu
    container_name: sql-server
    volumes:
      - /home/${USER_ROOT}/Dev/dotnet-environment/mssql:/var/opt/mssql/data
    ports:
      - "1433:1433"
    environment:
      ACCEPT_EULA: "Y"
      SQL_PASSWORD: ${SQL_PASSWORD}
      SQL_PID: ${SQL_PID}
    networks:
      - devlx-network

  redis:
    image: redis:alpine
    container_name: redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    networks:
      - devlx-network
    depends_on:
      - mssql-server

  redisinsight:
    image: redislabs/redisinsight:latest
    container_name: redis-insight
    ports:
      - "8001:8001"
    volumes:
      - /home/${USER_ROOT}/Dev/dotnet-environment/redisdb:/db
    depends_on:
      - redis
    networks:
      - devlx-network

  dotnet:
    image: mcr.microsoft.com/dotnet/sdk:3.1
    container_name: dotnet
    stdin_open: true # docker run -i
    tty: true # docker run -t
    ports:
      - "5000:5000"
      - "5001:5001"
    volumes:
      - /home/${USER_ROOT}/Dev/dotnet-environment/dotnet:/srv/app
    working_dir: /srv/app
    depends_on:
      - redisinsight
    environment:
      BUILD_CONFIGURATION: "Debug"
      ASPNETCORE_ENVIRONMENT: "Development"
      ASPNETCORE_URLS: "http://+:80"
    expose:
      - "80"
    networks:
      - devlx-network

networks:
  devlx-network:
    driver: bridge
    external: true
